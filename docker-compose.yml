version: '3'
services:
  # create nginx web server container
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: aslm-nginx-django
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - local
  # create django application container
  web:
    restart: always
    build: ./django/
    container_name: aslm-django-guinicorn
    command: supervisord -c /etc/supervisor/conf.d/aslm-supervisor-gunicorn.conf -n
    depends_on:
      - db
    volumes:
      - ./django/aslm:/src
    expose:
      - "8000"
    links:
      - db
      - rabbit
      - redis
    networks:
      - local
    tty: true
  # create postgreSQL container
  db:
    image: postgres:latest
    container_name: aslm-postgredb-django
    networks:
      - local
  # create redis backend container
  redis:
    build: ./redis
    container_name: aslm-redis-django
    ports:
      - '6378:6378'
    networks:
      - local
  # create rabbitMQ for AMQP messages container
  rabbit:
    container_name: aslm-rabbit-django
    image: rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"  # we forward this port because it's useful for debugging
      - "15672:15672"  # here, we can access rabbitmq management plugin
    networks:
      - local
  # create celery worker container
  worker:
    container_name: aslm-celery-worker
    build:
      context: ./django
      dockerfile: Dockerfile_celery
    command: celery -A aslm worker -l debug -n default@%h
    volumes:
      - .:/app
    links:
      - db
      - rabbit
      - redis
    depends_on:
      - rabbit
    networks:
      - local
networks:
  local:
